{"version":3,"sources":["Components/Modal/Modal.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/ImageGallary/ImageGallary.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Components/App.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.js","PixabayApi/PixabayApi.js","Components/ImageGalleryItem/ImageGallaryItem.js","Components/ImageGallary/ImageGallary.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/Loader/Loader.js","Components/App.js","index.js"],"names":["module","exports","Searchbar","onSubmitForm","useState","search","setSearch","reset","className","s","SearchForm","onSubmit","event","preventDefault","trim","toast","error","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","value","target","axios","defaults","baseURL","fetchImgWithQuery","a","page","get","data","hits","ImageGalleryItem","webformatURL","tags","onClickImage","ImageGalleryItem_image","src","alt","onClick","ImageGallery","imgArray","length","map","id","largeImageURL","Button","uploadMorePhotos","prototype","PropTypes","func","isRequired","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","toggleModal","closeByBackDrop","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Overlay","Img","Component","PreLoader","Loader","color","height","width","App","setPage","setImgArray","isLoading","setIsLoading","showModal","setShowModal","setLargeImageURL","setError","useEffect","request","prevArray","scrollImg","fetchMyAPI","scrollTo","top","documentElement","scrollHeight","behavior","prevShowModal","imgFound","imgNotFound","Container","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdd79a4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3n4mY\",\"Modal\":\"Modal_Modal__26m5a\",\"Img\":\"Modal_Img__2vBVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__d8KfA\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__29JXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallary_ImageGallery__2eS_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__ufUk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3py_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3-8la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2EeyH\",\"SearchForm\":\"Searchbar_SearchForm__1oqhS\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2ZRza\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3-j01\",\"SearchForm_input\":\"Searchbar_SearchForm_input__LG6Q1\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmitForm }) {\n  const [search, setSearch] = useState('');\n\n  const handleSearch = ({ target }) => {\n    const { value } = target;\n    setSearch(value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (search.trim() === '') {\n      return toast.error('Please enter something to start your search!');\n    }\n\n    onSubmitForm(search);\n    reset();\n  };\n\n  const reset = () => {\n    setSearch('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.SearchForm_button}>\n          <span className={s.SearchForm_button_label}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm_input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleSearch}\n          value={search}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst fetchImgWithQuery = async (search = '', page = 1) => {\n  const { data } = await axios.get(\n    `/?q=${search}&page=${page}&key=18801046-311dc3cce9ae418b311c7953d&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n  return data.hits;\n};\n\nexport default fetchImgWithQuery;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, onClickImage }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItem_image}\n        src={webformatURL}\n        alt={tags}\n        onClick={onClickImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onClickImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallary.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGallaryItem';\n\nconst ImageGallery = ({ imgArray, onClickImage }) => {\n  return (\n    imgArray.length > 0 && (\n      <ul className={s.ImageGallery}>\n        {imgArray.map(({ id, webformatURL, largeImageURL, tags }) => (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            tags={tags}\n            onClickImage={() => onClickImage(largeImageURL)}\n          />\n        ))}\n      </ul>\n    )\n  );\n};\nImageGallery.propTypes = {\n  imgArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  onClickImage: PropTypes.func.isRequired,\n};\n\n// ImageGallary.propTypes = {\n//   imgArray: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       webformatURL: PropTypes.string.isRequired,\n//       largeImgURL: PropTypes.string.isRequired,\n//       tags: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onClickImage: PropTypes.func.isRequired,\n// };\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ uploadMorePhotos }) => {\n  return (\n    <button\n      className={s.Button}\n      type=\"button\"\n      onClick={() => uploadMorePhotos()}\n    >\n      Load More\n    </button>\n  );\n};\n\nButton.prototype = {\n  uploadMorePhotos: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentDidUpdate() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.toggleModal();\n    }\n  };\n\n  closeByBackDrop = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      this.props.toggleModal();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.closeByBackDrop}>\n        <div className={s.Modal}>\n          <img className={s.Img} src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport s from './Loader.module.css';\n\nconst PreLoader = () => {\n  return (\n    <div className={s.Loader}>\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\n    </div>\n  );\n};\n\nexport default PreLoader;\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport Searchbar from './Searchbar';\nimport fetchImgWithQuery from '../PixabayApi';\nimport ImageGallery from './ImageGallary';\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loader from './Loader';\n\nimport s from './App.module.css';\n\nfunction App() {\n  const [search, setSearch] = useState(null);\n  const [page, setPage] = useState(1);\n  const [imgArray, setImgArray] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      try {\n        const request = await fetchImgWithQuery(search, page);\n        await setImgArray(prevArray => [...prevArray, ...request]);\n        scrollImg();\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (search) fetchMyAPI();\n  }, [search, page]);\n\n  const onSubmitForm = data => {\n    setSearch(data);\n    setPage(1);\n    setIsLoading(true);\n    setError(null);\n    setImgArray([]);\n  };\n\n  const uploadMorePhotos = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const scrollImg = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  const onClickImage = largeImageURL => {\n    setLargeImageURL(largeImageURL);\n    toggleModal();\n  };\n\n  const imgFound = imgArray.length > 0 && !error;\n  const imgNotFound = search && imgArray.length === 0 && !error && !isLoading;\n\n  return (\n    <div className={s.Container}>\n      <Searchbar onSubmitForm={onSubmitForm} />\n      {error && <p>Whoops, something went wrong. Try again.</p>}\n      {imgFound && (\n        <>\n          <ImageGallery onClickImage={onClickImage} imgArray={imgArray} />\n          {!isLoading && <Button uploadMorePhotos={uploadMorePhotos} />}\n          {isLoading && <Loader />}\n          {showModal && (\n            <Modal largeImageURL={largeImageURL} toggleModal={toggleModal} />\n          )}\n        </>\n      )}\n      {imgNotFound && <p>No results were found for your search. Try again.</p>}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}